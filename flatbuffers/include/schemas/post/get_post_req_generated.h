// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_GETPOSTREQ_FBS_POST_H_
#define FLATBUFFERS_GENERATED_GETPOSTREQ_FBS_POST_H_

#include "flatbuffers/flatbuffers.h"

namespace fbs {
struct Session;
struct GeneralResponse;
}  // namespace fbs

namespace fbs {
namespace post {

struct GetPostRequest;

struct GetPostRequest FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  const fbs::Session *session() const { return GetPointer<const fbs::Session *>(4); }
  uint64_t post_id() const { return GetField<uint64_t>(6, 0); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, 4 /* session */) &&
           verifier.VerifyTable(session()) &&
           VerifyField<uint64_t>(verifier, 6 /* post_id */) &&
           verifier.EndTable();
  }
};

struct GetPostRequestBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_session(flatbuffers::Offset<fbs::Session> session) { fbb_.AddOffset(4, session); }
  void add_post_id(uint64_t post_id) { fbb_.AddElement<uint64_t>(6, post_id, 0); }
  GetPostRequestBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  GetPostRequestBuilder &operator=(const GetPostRequestBuilder &);
  flatbuffers::Offset<GetPostRequest> Finish() {
    auto o = flatbuffers::Offset<GetPostRequest>(fbb_.EndTable(start_, 2));
    return o;
  }
};

inline flatbuffers::Offset<GetPostRequest> CreateGetPostRequest(flatbuffers::FlatBufferBuilder &_fbb,
   flatbuffers::Offset<fbs::Session> session = 0,
   uint64_t post_id = 0) {
  GetPostRequestBuilder builder_(_fbb);
  builder_.add_post_id(post_id);
  builder_.add_session(session);
  return builder_.Finish();
}

inline const fbs::post::GetPostRequest *GetGetPostRequest(const void *buf) { return flatbuffers::GetRoot<fbs::post::GetPostRequest>(buf); }

inline bool VerifyGetPostRequestBuffer(flatbuffers::Verifier &verifier) { return verifier.VerifyBuffer<fbs::post::GetPostRequest>(); }

inline void FinishGetPostRequestBuffer(flatbuffers::FlatBufferBuilder &fbb, flatbuffers::Offset<fbs::post::GetPostRequest> root) { fbb.Finish(root); }

}  // namespace post
}  // namespace fbs

#endif  // FLATBUFFERS_GENERATED_GETPOSTREQ_FBS_POST_H_
